package SGCompute.CS;
message PieceInfo {
    enum TYPE {
        INPUT = 0;
        CACHE = 1;
        OUTPUT = 2;
    }
    required string describe = 1;
    required TYPE type = 2;
    required uint64 magic = 3;
    repeated uint32 keyDimesion = 4;
}

message ComputeInfo{
    required uint64 executor = 1;
    repeated uint64 inputPieces = 2;
    required uint64 outputPiece = 3;
}

message ExecuteInfo {
    message Key {
        required uint32 index = 1;
        required uint32 pos = 2;
    }
    message FuncInfo {
        required string formula = 1;
        required string parameter = 2;
        required string inputsType = 3;
        repeated Key variableKey = 4;
    }
    required FuncInfo sFuncInfo = 1;
    message FormulaInfo {
        required string sConditionFormula = 1;
        required string sVariableInfo = 2;
    }
    required FormulaInfo sConditionInfo = 2;
    repeated Key outputKey = 3;
}


message Result {
    enum StatusCode {
        SUCCESS = 0;
        FAIL = 1;
    }
    required StatusCode code = 1;
    required uint64 magic = 2;
}

service ComputeServer {
    rpc CreateExecutor (ExecuteInfo) returns (Result);
    rpc Execute (ComputeInfo) returns (Result);
    rpc Create (PieceInfo) returns (Result);
    rpc Release (Result) returns (Result);
}
